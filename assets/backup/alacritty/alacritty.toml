# $HOME/.config/alacritty/alacritty.toml
# by Rito Ghosh 2023-10-06

# Alacritty now uses TOML formatting for its config files.
# This is a simple example.

# There are the specification here: https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd
# It is not obvious how it translates to TOML. But it is extremely straightforward.

# example: WINDOW, COLORS, etc. are tables, and should be represented as [window], [colors], respectively.
# specifics of variables go under them. e.g.- look under "dynamic_padding" under-
# https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd#window
# write `dynamic_padding = true` (without backticks -`) under the table [window]
# for variables with multiple values, use "dotted keys". Like setting `padding.x = 5` under [window].
# This is simple. If not clear, do several trials and errors.

# Below is my initial set-up. The TOML homepage (https://toml.io/en/v1.0.0) was very helpful in figuring this out. 
# I put the file alacritty.toml in $HOME/.config/alacritty. However it can be kept anywhere among the places mentioned in
# https://github.com/alacritty/alacritty/tree/master#configuration

[terminal.shell]
program = "/usr/bin/tmux"
args = ["new-session", "-A", "-s", "main"]

[window]
opacity = 0.72
padding.x = 0
padding.y = 0

[colors.primary]
background = "#1b1d22"
foreground = "#e6e8ee"

[colors.cursor]
text = "#1b1d22"
cursor = "#f6f6ec"

[colors.selection]
text = "#1b1d22"
background = "#2e353d"

[colors.normal]
black = "#002731"
red = "#d01b24"
green = "#6bbe6c"
yellow = "#a57705"
blue = "#2075c7"
magenta = "#8b57b5"
cyan = "#259185"
white = "#e9e2cb"

[colors.bright]
black = "#006388"
red = "#f4153b"
green = "#50ee84"
yellow = "#b17e28"
blue = "#178dc7"
magenta = "#AF8FE9"
cyan = "#00b29e"
white = "#fcf4dc"

[font]
size = 11

# [[keyboard.bindings]]
# action = "SpawnNewInstance"
# key = "Return"
# mods = "Super|Shift"

[[keyboard.bindings]]
key = "F"
mods = "Control|Shift"
action = "None"

# Tip: for inspiration, look for values in the source code files of your favorite VS Code themes, and use the color picker in
# Google to test colors before setting a value, or simply using an editor such as VS Code where colors are displayed in a 
# small box when a HEX is detected by the editor.
